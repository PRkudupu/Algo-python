 select 
	ot.Game
  , ot.Age
  , ot.cur_pay as Cum_rev
  , ot.total_users as Total_unique_payers_per_game
  from
	(select   o.Game
			  , o.Age
			  , sum(coalesce(a.amount,0)) over (partition by o.Game order by o.Age) as cur_pay
			  , a.user_id
			  , max(o.total_users) over (partition by o.Game) as total_users
		 from
			 ( select   base.Game
					  , base.Age
					  , tran.user_id
					  , count(tran.user_id) as total_users
					from
					 (
						 select Age
							   , 'Racing' as Game
							   ,  0 as amount
						  from 
								(select distinct(activity_date) 
								  , datediff(activity_date,'2020-01-01') as Age
								   from revenue where game_id='Racing'
						  union all 
								   select distinct(activity_date)
								  , datediff(activity_date,'2020-01-01') as Age
								  from revenue where game_id='DH'
								)a
					   union all
						select Age
							   , 'DH' as Game
							   , 0 as amount
						  from 
								(select distinct(activity_date) 
								  , datediff(activity_date,'2020-01-01') as Age
								   from revenue where game_id='Racing'
							  union all 
								   select distinct(activity_date)
								  , datediff(activity_date,'2020-01-01') as Age
								  from revenue where game_id='DH'
						   )b
						 )base
				 left outer join
					   (select datediff(activity_date,'2020-01-01') as Age
						  , user_id
						  , amount
						  , activity_date
						  , game_id
							  from revenue
						 )tran
				on base.Age=tran.Age and base.Game=tran.game_id
				group by  base.Game, base.Age
				order by base.Game,base.Age 
				) o
		left outer join
		     (select  amount
			        , datediff(activity_date,'2020-01-01') as Age
					, game_id
					, user_id
					 from 
					revenue
			  )a
		on a.game_id = o.Game and a.Age=o.Age
		order by o.Game,o.Age
		)ot
	group by ot.Game,ot.Age
	order by ot.Game desc